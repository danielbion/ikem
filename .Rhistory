V = (x[i,supIdxp1] - theta$media[k,supIdxp1]) * (x[i,supIdxp2] - theta$media[k,supIdxp2])
mcov[p1,p2] = mcov[p1,p2] + (posteriori[i,k] * (W + V))
}
}
}
theta$mcov[[k]] = mcov/(2*sum(posteriori[,k]))
}
return (theta)
}
theta = M.step()
posteriori = E.step()
retorno1 = IKEMIS(x, repPerIteration = 5, plot = FALSE, iterations = 1)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
source("IKEM_IS.r")
x = as.matrix(read.table('Agaricus.txt', head = TRUE))
x = normalizarDadosSimbolicos(x)
alvo = rep(1, dim(x)[1])
alvo[c(7, 13, 18, 24)] = 2
alvo[c(7, 13, 18, 24)] = 0
retorno1 = IKEMIS(x, repPerIteration = 5, plot = FALSE, iterations = 1)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEMIS(x, repPerIteration = 5, plot = FALSE, iterations = 1)
retorno1 = IKEMIS(x, repPerIteration = 5, plot = FALSE, iterations = 1)
retorno1 = IKEMIS(x, repPerIteration = 5, plot = FALSE, iterations = 1)
retorno1 = IKEMIS(x, repPerIteration = 5, plot = FALSE, iterations = 1)
posteriori
sum((posteriori - old_posteriori)^2) < 0.001
sum((posteriori - old_posteriori)^2) < 0.001
getData = function(base, scenario){
return(
switch(base,
switch(scenario,
base1(n1=100, n2=100, var1=3, var2=3, range1=2, range2=2, offset2=c(10,5)),
base1(100, 100, 3, 1, 2, 2, c(10,5)),
base1(100, 100, 3, 3, 5, 1, c(0, 0))
),
switch(scenario,
base2(n1=300, n2=80, var2=0.1, range1=0.5, range2=0.5, offset2=c(-1.5, 1.5)),
base2(n1=300, n2=80, var2=0.1, range1=0.5, range2=0.5, offset2=c(-2, 2)),
base2(n1=300, n2=80, var2=0.1, range1=0.2, range2=0.5, offset2=c(-2, 2))
),
switch(scenario,
base3(n1 = 100, n2=80, range1=1, range2=1, var1=0.3),
base3(n1 = 100, n2=80, range1=1, range2=0.5, var1=0.4),
base3(n1 = 100, n2=80, range1=1, range2=0.5, var1=0.8)
),
))
}
data1 = getData(1,1)
x = data1[[1]]
alvo = data1[[2]]
x
alvo
retorno1 = IKEM(x, maxRep = 5, kernelType = 0, D = 10, plot = FALSE, numRep = 1)
retorno1
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEMIS(x, repPerIteration = 5, plot = FALSE, iterations = 1)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEMIS(x, repPerIteration = 5, plot = FALSE, iterations = 1)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEMIS(x, repPerIteration = 5, plot = FALSE, iterations = 1)
source("IKEM_IS.r")
retorno1 = IKEMIS(x, repPerIteration = 5, plot = FALSE, iterations = 1)
n = dim(x)[1]
pp = dim(x)[2]
p = pp/2
c=2
epsilon = 0.000001
melhorML = 10000000000;
tau = c(0.5, 0.5)
t = 0
MLatual = 1
MLdepois = -1
# kernelInicial = inicializarK()
posteriori = matrix(0, nrow = n, ncol = c)
# posteriori[,1] = runif(n, 0, 1)
# posteriori[,2] = 1 - posteriori[,1]
posteriori = inicializarPosteriori()
old_posteriori = posteriori
theta = list(
tau=c(0.5,0.5),
media = matrix(
c(apply(x[alvo==1,1:pp],2,mean),
apply(x[alvo==2,1:pp],2,mean)),
nrow = c, ncol = pp, byrow=TRUE),
mcov = list(matrix(0,nrow=p,ncol=p,byrow=TRUE),
matrix(0,nrow=p,ncol=p,byrow=TRUE))
)
theta
pp
p
alvo
clear
clear()
setwd("C:/bitbucket/ikem")
source("functions_sda.r")
library('MASS')
library('Epi')
library('mclust')
source("Interval_EM.r")
source("IKEM_IS.r")
source("Interval_Kernel_EM.r")
source('Interval_Kernel_Fuzzy_C-Means.r')
data1 = getData(1,1)
x = data1[[1]]
alvo = data1[[2]]
getData = function(base, scenario){
return(
switch(base,
switch(scenario,
base1(n1=100, n2=100, var1=3, var2=3, range1=2, range2=2, offset2=c(10,5)),
base1(100, 100, 3, 1, 2, 2, c(10,5)),
base1(100, 100, 3, 3, 5, 1, c(0, 0))
),
switch(scenario,
base2(n1=300, n2=80, var2=0.1, range1=0.5, range2=0.5, offset2=c(-1.5, 1.5)),
base2(n1=300, n2=80, var2=0.1, range1=0.5, range2=0.5, offset2=c(-2, 2)),
base2(n1=300, n2=80, var2=0.1, range1=0.2, range2=0.5, offset2=c(-2, 2))
),
switch(scenario,
base3(n1 = 100, n2=80, range1=1, range2=1, var1=0.3),
base3(n1 = 100, n2=80, range1=1, range2=0.5, var1=0.4),
base3(n1 = 100, n2=80, range1=1, range2=0.5, var1=0.8)
),
))
}
data1 = getData(1,1)
x = data1[[1]]
alvo = data1[[2]]
x
alvo
retorno1 = IKEM(x, maxRep = 5, kernelType = 0, D = 10, plot = FALSE, numRep = 1)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEM(x, maxRep = 5, kernelType = 0, D = 10, plot = FALSE, numRep = 1)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEMIS(x, repPerIteration = 5, plot = FALSE, iterations = 1)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
source("IKEM_IS.r")
retorno1 = IKEMIS(x, repPerIteration = 5, plot = FALSE, iterations = 1)
retorno1 = IKEMIS(x, repPerIteration = 5, plot = FALSE, iterations = 1)
mcov[p1,p2] = mcov[p1,p2] + (posteriori[i,k] * (W + V))
posteriori[i,k]
W
V
x[i,infIdxp1]
x
i
p1
p
p2
infIdxp2
infIdxp1
x[i,infIdxp1]
i
x[1,1]
x
mcov[p1,p2] = mcov[p1,p2] + (posteriori[i,k] * (W + V))
(posteriori[i,k] * (W + V))
(x[i,infIdxp1] - theta$media[k,infIdxp1]) * (x[i,infIdxp2] - theta$media[k,infIdxp2])
(x[i,infIdxp1] - theta$media[k,infIdxp1])
theta$media[k,infIdxp1]
theta
posteriori = matrix(0, nrow = n, ncol = c)
# posteriori[,1] = runif(n, 0, 1)
# posteriori[,2] = 1 - posteriori[,1]
retorno = inicializarPosteriori()
retorno
posteriori = retorno$posteriori
posteriori
retorno$Posteriori
source("IKEM_IS.r")
source("IKEM_IS.r")
retorno1 = IKEMIS(x, repPerIteration = 5, plot = FALSE, iterations = 1)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEMIS(x, repPerIteration = 5, plot = FALSE, iterations = 1)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEMIS(x, repPerIteration = 5, plot = FALSE, iterations = 1)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEMIS(x, repPerIteration = 5, plot = FALSE, iterations = 1)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEMIS(x, repPerIteration = 5, plot = FALSE, iterations = 1)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEMIS(x, repPerIteration = 5, plot = FALSE, iterations = 1)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEMIS(x, repPerIteration = 5, plot = FALSE, iterations = 1)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
criterio = c()
for(i in 1:100){
retorno1 = IKEM(x, maxRep = 5, kernelType = 0, D = 10, plot = FALSE, numRep = 1)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
criterio = c(criterio, roc$AUC)
}
criterio
for(i in 1:4){
retorno1 = IKEMIS(x, repPerIteration = 5, plot = FALSE, iterations = 1)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
criterio = c(criterio, roc$AUC)
}
criterio
retorno1 = IKEMIS(x, repPerIteration = 5, plot = TRUE, iterations = 1)
retorno1 = IKEMIS(x, repPerIteration = 5, plot = TRUE, iterations = 1)
retorno1 = IKEMIS(x, repPerIteration = 5, plot = TRUE, iterations = 1)
retorno1 = IKEM(x, maxRep = 5, kernelType = 0, D = 10, plot = TRUE, numRep = 1)
retorno1 = IKEMIS(x, repPerIteration = 5, plot = TRUE, iterations = 10)
retorno
retorno1
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
retorno1 = IKEM(x, maxRep = 5, kernelType = 0, D = 10, plot = FALSE, numRep = 1)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
retorno1 = IKEMIS(x, repPerIteration = 5, plot = FALSE, iterations = 1)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
retorno1 = IKEMIS(x, repPerIteration = 5, plot = FALSE, iterations = 1)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
retorno1 = IKEMIS(x, repPerIteration = 5, plot = FALSE, iterations = 1)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
retorno1 = IKEMIS(x, repPerIteration = 5, plot = FALSE, iterations = 1)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
retorno1 = IKEMIS(x, repPerIteration = 5, plot = FALSE, iterations = 1)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
retorno1 = IKFCM(x, c = 2, m = 0.1, maxRep = 20, monteCarlo = 10)
data1 = getData(1,1)
x = data1[[1]]
alvo = data1[[2]]
x
getData = function(base, scenario){
return(
switch(base,
switch(scenario,
base1(n1=20, n2=20, var1=3, var2=3, range1=2, range2=2, offset2=c(10,5)),
base1(100, 100, 3, 1, 2, 2, c(10,5)),
base1(100, 100, 3, 3, 5, 1, c(0, 0))
),
switch(scenario,
base2(n1=300, n2=80, var2=0.1, range1=0.5, range2=0.5, offset2=c(-1.5, 1.5)),
base2(n1=300, n2=80, var2=0.1, range1=0.5, range2=0.5, offset2=c(-2, 2)),
base2(n1=300, n2=80, var2=0.1, range1=0.2, range2=0.5, offset2=c(-2, 2))
),
switch(scenario,
base3(n1 = 100, n2=80, range1=1, range2=1, var1=0.3),
base3(n1 = 100, n2=80, range1=1, range2=0.5, var1=0.4),
base3(n1 = 100, n2=80, range1=1, range2=0.5, var1=0.8)
),
))
}
x
data1 = getData(1,1)
x = data1[[1]]
alvo = data1[[2]]
x
data1 = getData(1,1)
x = data1[[1]]
alvo = data1[[2]]
data1 = getData(1,1)
x = data1[[1]]
alvo = data1[[2]]
data1 = getData(1,1)
x = data1[[1]]
alvo = data1[[2]]
retorno1 = IKFCM(x, c = 2, m = 0.1, maxRep = 20, monteCarlo = 1)
roc = ROC(test = retorno1$U[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$U[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKFCM(x, c = 2, m = 0.1, maxRep = 20, monteCarlo = 10)
roc = ROC(test = retorno1$U[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$U[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEM(x, maxRep = 5, kernelType = 0, D = 10, plot = FALSE, numRep = 1)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEM(x, maxRep = 5, kernelType = 0, D = 10, plot = FALSE, numRep = 1)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEM(x, maxRep = 5, kernelType = 0, D = 10, plot = FALSE, numRep = 1)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEMIS(x, repPerIteration = 5, plot = FALSE, iterations = 1)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEMIS(x, repPerIteration = 5, plot = FALSE, iterations = 1)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEMIS(x, repPerIteration = 5, plot = FALSE, iterations = 1)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEMIS(x, repPerIteration = 5, plot = FALSE, iterations = 1)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEMIS(x, repPerIteration = 5, plot = FALSE, iterations = 10)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEMIS(x, repPerIteration = 5, plot = FALSE, iterations = 10)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEMIS(x, repPerIteration = 5, plot = FALSE, iterations = 10)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEMIS(x, repPerIteration = 50, plot = TRUE, iterations = 10)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEMIS(x, repPerIteration = 500, plot = FALSE, iterations = 100)
retorno1 = IKEMIS(x, repPerIteration = 500, plot = FALSE, iterations = 3)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEMIS(x, repPerIteration = 500, plot = TRUE, iterations = 5)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
getData = function(base, scenario){
return(
switch(base,
switch(scenario,
base1(n1=20, n2=20, var1=3, var2=3, range1=2, range2=2, offset2=c(10,5)),
base1(100, 100, 3, 1, 2, 2, c(10,5)),
base1(20, 20, 3, 3, 5, 1, c(0, 0))
),
switch(scenario,
base2(n1=300, n2=80, var2=0.1, range1=0.5, range2=0.5, offset2=c(-1.5, 1.5)),
base2(n1=300, n2=80, var2=0.1, range1=0.5, range2=0.5, offset2=c(-2, 2)),
base2(n1=300, n2=80, var2=0.1, range1=0.2, range2=0.5, offset2=c(-2, 2))
),
switch(scenario,
base3(n1 = 100, n2=80, range1=1, range2=1, var1=0.3),
base3(n1 = 100, n2=80, range1=1, range2=0.5, var1=0.4),
base3(n1 = 100, n2=80, range1=1, range2=0.5, var1=0.8)
),
))
}
data1 = getData(1,3)
x = data1[[1]]
alvo = data1[[2]]
data1 = getData(1,3)
x = data1[[1]]
alvo = data1[[2]]
data1 = getData(1,3)
x = data1[[1]]
alvo = data1[[2]]
data1 = getData(1,3)
x = data1[[1]]
alvo = data1[[2]]
retorno1 = IKEMIS(x, repPerIteration = 5, plot = FALSE, iterations = 1)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEMIS(x, repPerIteration = 5, plot = FALSE, iterations = 1)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEMIS(x, repPerIteration = 5, plot = FALSE, iterations = 1)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEMIS(x, repPerIteration = 5, plot = FALSE, iterations = 1)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEMIS(x, repPerIteration = 500, plot = FALSE, iterations = 3)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEMIS(x, repPerIteration = 5, plot = FALSE, iterations = 1)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEMIS(x, repPerIteration = 500, plot = FALSE, iterations = 3)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEMIS(x, repPerIteration = 500, plot = FALSE, iterations = 30)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEMIS(x, repPerIteration = 500, plot = FALSE, iterations = 1)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEMIS(x, repPerIteration = 500, plot = FALSE, iterations = 1)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEMIS(x, repPerIteration = 5, plot = FALSE, iterations = 1)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEMIS(x, repPerIteration = 5, plot = FALSE, iterations = 1)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEMIS(x, repPerIteration = 5, plot = FALSE, iterations = 1)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEMIS(x, repPerIteration = 50, plot = FALSE, iterations = 1)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEMIS(x, repPerIteration = 5000, plot = FALSE, iterations = 1)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEMIS(x, repPerIteration = 5000, plot = FALSE, iterations = 1)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEM(x, maxRep = 5, kernelType = 0, D = 10, plot = FALSE, numRep = 1)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEM(x, maxRep = 5, kernelType = 0, D = 10, plot = FALSE, numRep = 1)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKFCM(x, c = 2, m = 0.1, maxRep = 20, monteCarlo = 10)
roc = ROC(test = retorno1$U[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$U[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
