5.05, 5.00, 4.95,
5.50, 5.50, 5.40,
5.45, 5.55, 5.50,
5.55, 5.55, 5.35,
5.45, 5.50, 5.55,
5.50, 5.45, 5.25,
5.65, 5.60, 5.40,
5.70, 5.65, 5.55,
6.30, 6.30, 6.25),
nrow = 22,
byrow = TRUE,
dimnames = list(1 : 22,
c("Round Out", "Narrow Angle", "Wide Angle")))
RoundingTimes
friedman.test(RoundingTimes)
wb <- aggregate(warpbreaks$breaks,
by = list(w = warpbreaks$wool,
t = warpbreaks$tension),
FUN = mean)
wb
friedman.test(wb$x, wb$w, wb$t)
friedman.test(x ~ w | t, data = wb)
y
friedman.test(y)
?friedman.test
criterio2_1 = c(
0.9856,0.5495,0.9996,1.0000,0.5238,1.0000,1.0000,0.8322,1.0000,0.9111,1.0000,1.0000,
0.9548,0.6568,0.7675,0.5156,0.7462,0.6046,0.7123,0.6656,0.9908,1.0000,0.9544,0.5520,
0.8228,0.5852,0.9861,0.9839,0.7075,1.0000,1.0000,0.5127,1.0000,0.9419,0.8172,0.7604,
1.0000,0.6577,1.0000,0.6015,1.0000,1.0000,0.6972,0.8651,0.9923,0.9873,0.5283,1.0000,
0.7738,0.7353,0.7748,1.0000,0.8988,0.6748,1.0000,1.0000,0.8913,0.7296,0.7431,0.7881,
0.5800,0.9695,0.9365,0.6018,0.9179,0.9292,0.7166,0.5040,0.9652,0.8431,1.0000,0.5044,
0.7038,0.9914,1.0000,0.9955,0.9355,0.5413,0.5174,0.9863,0.9841,0.5512,1.0000,0.7043,
0.7024,0.7456,0.6479,1.0000,0.9641,1.0000,0.7872,0.5588,0.5148,0.6216,1.0000,0.8618,
0.5134,0.9989,0.9854,0.9478)
y = cbind(criterio1_1, criterio1_2, criterio2_1)
friedman.test(y)
y
mean(y[,1])
mean(y[,2])
mean(y[,3])
y = cbind(criterio1_1, criterio1_1, criterio2_1)
friedman.test(y)
runif()
runif(1)
runif(1) * 0.5
runif(1) * 0.5
runif(1) * 0.05
runif(1) * 0.05
runif(1) * 0.05
runif(1) * 0.05
runif(1) * 0.05
runif(1) * 0.05
runif(1) * 0.03
runif(1) * 0.03
runif(10) * 0.03
runif(10) * 0.03
runif(10) * 0.03
setwd("C:/bitbucket/ikem")
source("functions_sda.r")
library('MASS')
library('Epi')
library('mclust')
source("Interval_EM.r")
source("IKEM_IS.r")
source("Interval_Kernel_EM.r")
source('Interval_Kernel_Fuzzy_C-Means.r')
retorno1 = IKEM(x, maxRep = 5, kernelType = 0, D = 10, plot = FALSE, numRep = 1)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
setwd("C:/bitbucket/ikem")
source("functions_sda.r")
library('MASS')
library('Epi')
library('mclust')
source("Interval_EM.r")
source("IKEM_IS.r")
source("Interval_Kernel_EM.r")
source('Interval_Kernel_Fuzzy_C-Means.r')
x = as.matrix(read.table('temperatura.txt'))
x = x[-c(19,37),]
x = normalizarDadosSimbolicos(x)
alvo = rep(1, dim(x)[1])
alvo[c(1,2,8,10,11,14,15,17,20,21,24,25,26,27,28,30,32,33,34,35)] = 2
x_interval = interval(x[,1],x[,2])
y_interval = interval(x[,3],x[,4])
z_interval = interval(x[,5],x[,6])
# intervalGraph3D(x_interval, y_interval, z_interval, alvo = alvo)
alvo[c(1,2,8,10,11,14,15,17,20,21,24,25,26,27,28,30,32,33,34,35)] = 0
retorno1 = IKEM(x, maxRep = 5, kernelType = 0, D = 10, plot = FALSE, numRep = 1)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
criterio1 = c()
while(length(criterio1) < 100){
retorno1 = IEM(x, tipoMatriz = 3, numRep = 1, plot = FALSE)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
criterio1 = c(criterio1, roc$AUC)
}
criterio1
criterio1 = c()
while(length(criterio1) < 100){
tryCatch({
retorno1 = IEM(x, tipoMatriz = 3, numRep = 1, plot = FALSE)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
if(criterio1 <= 1){
criterio1 = c(criterio1, roc$AUC)
}
}, error=function(e){})
}
criterio1
criterio1 = c()
while(length(criterio1) < 100){
tryCatch({
retorno1 = IEM(x, tipoMatriz = 3, numRep = 1, plot = FALSE)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
if(criterio1 <= 1){
criterio1 = c(criterio1, roc$AUC)
}
}, error=function(e){})
}
criterio1
criterio1 = c()
while(length(criterio1) < 100){
tryCatch({
retorno1 = IEM(x, tipoMatriz = 3, numRep = 1, plot = FALSE)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
if(criterio1 <= 1){
criterio1 = c(criterio1, roc$AUC)
}
}, error=function(e){})
}
criterio1
criterio1 = c()
criterio1 = c()
tryCatch({
retorno1 = IEM(x, tipoMatriz = 3, numRep = 1, plot = FALSE)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
if(criterio1 <= 1){
criterio1 = c(criterio1, roc$AUC)
}
}, error=function(e){})
criterio1 = c()
while(length(criterio1) < 100){
tryCatch({
retorno1 = IEM(x, tipoMatriz = 3, numRep = 1, plot = FALSE)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
if(roc$AUC <= 1){
criterio1 = c(criterio1, roc$AUC)
}
}, error=function(e){})
}
criterio1
criterio1
criterio1 = c()
while(length(criterio1) < 100){
tryCatch({
retorno1 = IEM(x, tipoMatriz = 3, numRep = 3, plot = FALSE)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
if(roc$AUC <= 1){
criterio1 = c(criterio1, roc$AUC)
}
}, error=function(e){})
}
criterio1 = c()
while(length(criterio1) < 100){
print(length(criterio1))
tryCatch({
retorno1 = IEM(x, tipoMatriz = 3, numRep = 3, plot = FALSE)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
if(roc$AUC <= 1){
criterio1 = c(criterio1, roc$AUC)
}
}, error=function(e){})
}
criterio1
write(criterio1, "", sep = ",", ncol = length(criterio1))
criterio2 = c()
while(length(criterio2) < 100){
print(length(criterio2))
tryCatch({
retorno1 = IKFCM(x, c = 2, m = 0.1, maxRep = 10, monteCarlo = 3)
roc = ROC(test = retorno1$U[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$U[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
if(roc$AUC <= 1){
criterio2 = c(criterio2, roc$AUC)
}
}, error=function(e){})
}
x
criterio2 = c()
while(length(criterio2) < 100){
print(length(criterio2))
tryCatch({
retorno1 = IKFCM(x, c = 2, m = 0.1, maxRep = 10, monteCarlo = 3)
roc = ROC(test = retorno1$U[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$U[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
if(roc$AUC <= 1){
criterio2 = c(criterio2, roc$AUC)
}
}, error=function(e){})
}
criterio2 = c()
while(length(criterio2) < 100){
print(length(criterio2))
tryCatch({
retorno1 = IKFCM(x, c = 2, m = 0.1, maxRep = 50, monteCarlo = 5)
roc = ROC(test = retorno1$U[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$U[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
if(roc$AUC <= 1){
criterio2 = c(criterio2, roc$AUC)
}
}, error=function(e){})
}
criterio3 = c()
while(length(criterio3) < 100){
print(length(criterio3))
tryCatch({
retorno1 = IKEM(x, maxRep = 5, kernelType = 0, D = 10, plot = FALSE, numRep = 1)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
if(roc$AUC <= 1){
criterio3 = c(criterio3, roc$AUC)
}
}, error=function(e){})
}
criterio2
write(criterio2, "", sep = ",", ncol = length(criterio2))
write(criterio3, "", sep = ",", ncol = length(criterio3))
#IEM(x, tipoMatriz = 3, numRep = 3, plot = FALSE)
criterio1 = c
#IKFCM(x, c = 2, m = 0.1, maxRep = 20, monteCarlo = 3)
criterio2 = c
#IKEM(x, maxRep = 5, kernelType = 0, D = 10, plot = FALSE, numRep = 1)
criterio3 = c(0.59,0.6033333,0.6266667,0.5266667,0.5566667,0.5766667,0.6033333,0.6033333,0.5966667,0.52,0.6033333,0.7033333,0.7033333,0.7033333,0.7033333,0.5533333,0.5566667,0.6033333,0.6633333,0.59,0.58,0.6266667,0.6566667,0.5533333,0.5766667,0.63,0.6566667,0.6333333,0.6033333,0.6033333,0.6266667,0.58,0.62,0.59,0.6033333,0.7033333,0.6566667,0.58,0.59,0.6566667,0.5566667,0.6033333,0.5416667,0.6633333,0.62,0.6266667,0.5966667,0.57,0.5766667,0.5966667,0.5966667,0.5416667,0.5633333,0.55,0.6033333,0.64,0.6033333,0.58,0.7033333,0.55,0.7233333,0.6666667,0.6566667,0.62,0.5766667,0.5866667,0.5533333,0.59,0.58,0.5566667,0.6266667,0.6033333,0.64,0.7033333,0.5266667,0.6066667,0.5533333,0.5416667,0.6633333,0.58,0.5866667,0.58,0.5566667,0.53,0.5966667,0.6033333,0.6633333,0.6033333,0.58,0.6033333,0.58,0.62,0.6666667,0.7033333,0.6033333,0.51,0.5866667,0.51,0.59,0.5266667
#IKEMIS(x, repPerIteration = 50, plot = FALSE, iterations = 10)
criterio4 = c(0.55,0.525,0.54,0.52,0.525,0.525,0.525,0.55,0.525,0.5566667,0.525,0.525,0.5566667,0.525,0.55,0.525,0.525,0.55,0.525,0.6633333,0.525,0.525,0.525,0.525,0.55,0.5366667,0.55,0.525,0.55,0.52,0.52,0.525,0.525,0.525,0.525,0.52,0.525,0.5566667,0.525,0.55,0.525,0.6633333,0.525,0.525,0.55,0.525,0.5566667,0.525,0.525,0.5566667,0.5566667,0.54,0.525,0.525,0.6933333,0.525,0.54,0.68,0.5366667,0.525,0.525,0.525,0.55,0.55,0.5566667,0.55,0.55,0.525,0.55,0.55,0.525,0.68,0.52,0.525,0.52,0.525,0.525,0.525,0.525,0.525,0.525,0.55,0.52,0.525,0.525,0.525,0.55,0.68,0.525,0.6633333,0.5566667,0.525,0.525,0.52,0.525,0.52,0.525,0.525,0.525,0.52
#IEM(x, tipoMatriz = 3, numRep = 3, plot = FALSE)
criterio1 = c(0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.51,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5433333,0.51,0.51,0.5166667,0.5433333,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.51,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.51,0.51,0.5166667,0.51,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667,0.5166667)
#IKFCM(x, c = 2, m = 0.1, maxRep = 20, monteCarlo = 3)
criterio2 = c
#IKEM(x, maxRep = 5, kernelType = 0, D = 10, plot = FALSE, numRep = 1)
criterio3 = c(0.59,0.6033333,0.6266667,0.5266667,0.5566667,0.5766667,0.6033333,0.6033333,0.5966667,0.52,0.6033333,0.7033333,0.7033333,0.7033333,0.7033333,0.5533333,0.5566667,0.6033333,0.6633333,0.59,0.58,0.6266667,0.6566667,0.5533333,0.5766667,0.63,0.6566667,0.6333333,0.6033333,0.6033333,0.6266667,0.58,0.62,0.59,0.6033333,0.7033333,0.6566667,0.58,0.59,0.6566667,0.5566667,0.6033333,0.5416667,0.6633333,0.62,0.6266667,0.5966667,0.57,0.5766667,0.5966667,0.5966667,0.5416667,0.5633333,0.55,0.6033333,0.64,0.6033333,0.58,0.7033333,0.55,0.7233333,0.6666667,0.6566667,0.62,0.5766667,0.5866667,0.5533333,0.59,0.58,0.5566667,0.6266667,0.6033333,0.64,0.7033333,0.5266667,0.6066667,0.5533333,0.5416667,0.6633333,0.58,0.5866667,0.58,0.5566667,0.53,0.5966667,0.6033333,0.6633333,0.6033333,0.58,0.6033333,0.58,0.62,0.6666667,0.7033333,0.6033333,0.51,0.5866667,0.51,0.59,0.5266667)
#IKEMIS(x, repPerIteration = 50, plot = FALSE, iterations = 10)
criterio4 = c(0.55,0.525,0.54,0.52,0.525,0.525,0.525,0.55,0.525,0.5566667,0.525,0.525,0.5566667,0.525,0.55,0.525,0.525,0.55,0.525,0.6633333,0.525,0.525,0.525,0.525,0.55,0.5366667,0.55,0.525,0.55,0.52,0.52,0.525,0.525,0.525,0.525,0.52,0.525,0.5566667,0.525,0.55,0.525,0.6633333,0.525,0.525,0.55,0.525,0.5566667,0.525,0.525,0.5566667,0.5566667,0.54,0.525,0.525,0.6933333,0.525,0.54,0.68,0.5366667,0.525,0.525,0.525,0.55,0.55,0.5566667,0.55,0.55,0.525,0.55,0.55,0.525,0.68,0.52,0.525,0.52,0.525,0.525,0.525,0.525,0.525,0.525,0.55,0.52,0.525,0.525,0.525,0.55,0.68,0.525,0.6633333,0.5566667,0.525,0.525,0.52,0.525,0.52,0.525,0.525,0.525,0.52)
mean(criterio1)
mean(criterio2)
mean(criterio3)
mean(criterio4)
max(criterio1)
max(criterio2)
max(criterio3)
max(criterio4)
retorno1 = IEM(x, tipoMatriz = 3, numRep = 1, plot = TRUE)
x = as.matrix(read.table('Agaricus.txt', head = TRUE))
x = normalizarDadosSimbolicos(x)
alvo = rep(1, dim(x)[1])
alvo[c(7, 13, 18, 24)] = 0
criterio1 = c()
while(length(criterio1) < 100){
print(length(criterio1))
tryCatch({
retorno1 = IEM(x, tipoMatriz = 3, numRep = 3, plot = FALSE)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
if(roc$AUC <= 1){
criterio1 = c(criterio1, roc$AUC)
}
}, error=function(e){})
}
criterio2 = c()
while(length(criterio2) < 100){
print(length(criterio2))
tryCatch({
retorno1 = IKFCM(x, c = 2, m = 0.1, maxRep = 50, monteCarlo = 5)
roc = ROC(test = retorno1$U[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$U[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
if(roc$AUC <= 1){
criterio2 = c(criterio2, roc$AUC)
}
}, error=function(e){})
}
criterio3 = c()
while(length(criterio3) < 100){
print(length(criterio3))
tryCatch({
retorno1 = IKEM(x, maxRep = 5, kernelType = 0, D = 10, plot = FALSE, numRep = 1)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
if(roc$AUC <= 1){
criterio3 = c(criterio3, roc$AUC)
}
}, error=function(e){})
}
criterio4 = c()
while(length(criterio4) < 100){
print(length(criterio4))
tryCatch({
retorno1 = IKEMIS(x, repPerIteration = 50, plot = FALSE, iterations = 10)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
if(roc$AUC <= 1){
criterio4 = c(criterio4, roc$AUC)
}
}, error=function(e){})
}
criterio1
x
write(criterio1, "", sep = ",", ncol = length(criterio1))
write(criterio2, "", sep = ",", ncol = length(criterio2))
write(criterio3, "", sep = ",", ncol = length(criterio3))
write(criterio4, "", sep = ",", ncol = length(criterio4))
mean(criterio1)
mean(criterio2)
mean(criterio3)
mean(criterio4)
x = as.matrix(read.table('carros.txt', head = TRUE))
x = normalizarDadosSimbolicos(x)
alvo = rep(1, dim(x)[1])
alvo[c(4,11,15,22,23)] = 0
criterio1 = c()
while(length(criterio1) < 100){
print(length(criterio1))
tryCatch({
retorno1 = IEM(x, tipoMatriz = 3, numRep = 3, plot = FALSE)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
if(roc$AUC <= 1){
criterio1 = c(criterio1, roc$AUC)
}
}, error=function(e){})
}
criterio2 = c()
while(length(criterio2) < 100){
print(length(criterio2))
tryCatch({
retorno1 = IKFCM(x, c = 2, m = 0.1, maxRep = 50, monteCarlo = 5)
roc = ROC(test = retorno1$U[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$U[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
if(roc$AUC <= 1){
criterio2 = c(criterio2, roc$AUC)
}
}, error=function(e){})
}
criterio3 = c()
while(length(criterio3) < 100){
print(length(criterio3))
tryCatch({
retorno1 = IKEM(x, maxRep = 5, kernelType = 0, D = 10, plot = FALSE, numRep = 1)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
if(roc$AUC <= 1){
criterio3 = c(criterio3, roc$AUC)
}
}, error=function(e){})
}
criterio4 = c()
while(length(criterio4) < 100){
print(length(criterio4))
tryCatch({
retorno1 = IKEMIS(x, repPerIteration = 50, plot = FALSE, iterations = 10)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
if(roc$AUC <= 1){
criterio4 = c(criterio4, roc$AUC)
}
}, error=function(e){})
}
warnings()
write(criterio1, "", sep = ",", ncol = length(criterio1))
write(criterio2, "", sep = ",", ncol = length(criterio2))
write(criterio3, "", sep = ",", ncol = length(criterio3))
write(criterio4, "", sep = ",", ncol = length(criterio4))
mean(criterio1)
mean(criterio2)
mean(criterio3)
mean(criterio4)
var(criterio1)
var(criterio2)
var(criterio3)
var(criterio4)
#temperatura
IEM_temperatura     = c
IKFCM_temperatura   = c
IKEM_temperatura    = c(0.59,0.6033333,0.6266667,0.5266667,0.5566667,0.5766667,0.6033333,0.6033333,0.5966667,0.52,0.6033333,0.7033333,0.7033333,0.7033333,0.7033333,0.5533333,0.5566667,0.6033333,0.6633333,0.59,0.58,0.6266667,0.6566667,0.5533333,0.5766667,0.63,0.6566667,0.6333333,0.6033333,0.6033333,0.6266667,0.58,0.62,0.59,0.6033333,0.7033333,0.6566667,0.58,0.59,0.6566667,0.5566667,0.6033333,0.5416667,0.6633333,0.62,0.6266667,0.5966667,0.57,0.5766667,0.5966667,0.5966667,0.5416667,0.5633333,0.55,0.6033333,0.64,0.6033333,0.58,0.7033333,0.55,0.7233333,0.6666667,0.6566667,0.62,0.5766667,0.5866667,0.5533333,0.59,0.58,0.5566667,0.6266667,0.6033333,0.64,0.7033333,0.5266667,0.6066667,0.5533333,0.5416667,0.6633333,0.58,0.5866667,0.58,0.5566667,0.53,0.5966667,0.6033333,0.6633333,0.6033333,0.58,0.6033333,0.58,0.62,0.6666667,0.7033333,0.6033333,0.51,0.5866667,0.51,0.59,0.5266667)
IKEM_IS_temperatura = c(0.55,0.525,0.54,0.52,0.525,0.525,0.525,0.55,0.525,0.5566667,0.525,0.525,0.5566667,0.525,0.55,0.525,0.525,0.55,0.525,0.6633333,0.525,0.525,0.525,0.525,0.55,0.5366667,0.55,0.525,0.55,0.52,0.52,0.525,0.525,0.525,0.525,0.52,0.525,0.5566667,0.525,0.55,0.525,0.6633333,0.525,0.525,0.55,0.525,0.5566667,0.525,0.525,0.5566667,0.5566667,0.54,0.525,0.525,0.6933333,0.525,0.54,0.68,0.5366667,0.525,0.525,0.525,0.55,0.55,0.5566667,0.55,0.55,0.525,0.55,0.55,0.525,0.68,0.52,0.525,0.52,0.525,0.525,0.525,0.525,0.525,0.525,0.55,0.52,0.525,0.525,0.525,0.55,0.68,0.525,0.6633333,0.5566667,0.525,0.525,0.52,0.525,0.52,0.525,0.525,0.525,0.52)
#agaricus
IEM_agaricus     = c(0.575,0.625,0.725,0.7375,0.725,0.74375,0.75,0.74375,0.675,0.5,0.75,0.625,0.5,0.625,0.7375,0.7,0.75,0.7375,0.675,0.5125,0.74375,0.75,0.55,0.6125,0.75,0.53125,0.675,0.75,0.7375,0.625,0.75,0.625,0.725,0.725,0.675,0.75,0.4875,0.575,0.5,0.74375,0.5,0.75,0.75,0.725,0.725,0.7,0.675,0.4875,0.5125,0.5125,0.75,0.725,0.675,0.725,0.725,0.75,0.725,0.575,0.7375,0.7875,0.75,0.75,0.725,0.75,0.625,0.74375,0.7375,0.75,0.625,0.725,0.675,0.725,0.6125,0.4875,0.7625,0.725,0.525,0.5,0.6125,0.725,0.625,0.625,0.5125,0.675,0.425,0.51875,0.625,0.75,0.425,0.625,0.7625,0.7625,0.75,0.675,0.75,0.6125,0.675,0.74375,0.675,0.74375)
IKFCM_agaricus   = c(0.6625,0.5,0.5,0.55,0.5125,0.6125,0.5875,0.5625,0.6125,0.5,0.6125,0.5875,0.5875,0.5875,0.6125,0.5,0.5875,0.5875,0.5,0.5875,0.5125,0.7875,0.65,0.6125,0.5,0.6625,0.6125,0.6125,0.5,0.6125,0.6125,0.7875,0.5,0.5,0.5,0.5875,0.6625,0.6125,0.6125,0.5625,0.6125,0.5125,0.6,0.5,0.5,0.6125,0.65,0.5125,0.5,0.6125,0.6125,0.5,0.5,0.5,0.6625,0.6625,0.6125,0.5125,0.5,0.6125,0.5,0.5,0.5,0.5625,0.5,0.6125,0.5,0.5,0.5,0.6125,0.5,0.5,0.5,0.6125,0.6625,0.65,0.6125,0.5,0.6625,0.5,0.6125,0.5,0.5,0.6125,0.6625,0.5875,0.5125,0.5,0.5,0.6125,0.5125,0.5,0.6,0.6625,0.6125,0.5,0.5875,0.5,0.6125,0.6125)
IKEM_agaricus    = c(0.5625,0.575,0.6375,0.84375,0.9,0.8625,0.5375,0.6875,0.6,0.5375,0.6375,0.575,0.5,0.575,0.5625,0.6,0.5125,0.525,0.5125,0.9,0.525,0.6375,0.85,0.55,0.6375,0.5,0.8625,0.525,0.8125,0.675,0.875,0.525,0.5125,0.675,0.8875,0.825,0.5,0.525,0.7,0.675,0.5,0.7625,0.875,0.6375,0.8125,0.7125,0.7,0.5375,0.8875,0.7125,0.85,0.875,0.85,0.65,0.775,0.55,0.875,0.625,0.9,0.5625,0.55,0.5125,0.55,0.5125,0.5625,0.875,0.8875,0.55625,0.6375,0.725,0.7,0.7,0.775,0.6875,0.8625,0.5,0.7625,0.9,0.5625,0.875,0.575,0.55,0.7,0.9,0.55,0.55,0.7,0.6375,0.7,0.5625,0.7125,0.8625,0.65,0.5875,0.85,0.5125,0.85,0.675,0.675,0.65)
IKEM_IS_agaricus = c
#carros
IEM_carros     = c(0.8714286,0.8714286,0.9642857,0.9678571,0.8714286,0.9642857,0.9642857,0.9642857,0.9642857,0.9642857,0.9678571,0.9678571,0.9678571,0.9642857,0.9678571,0.9642857,0.9642857,0.9642857,0.9642857,0.8714286,0.9678571,0.8714286,0.8714286,0.9678571,0.9642857,0.9642857,0.8714286,0.8571429,0.9642857,0.9642857,0.9642857,0.9642857,0.9642857,0.9642857,0.9642857,0.9642857,0.9678571,0.9678571,0.9642857,0.9678571,0.9642857,0.9642857,0.9642857,0.9678571,0.9642857,0.9678571,0.8714286,0.9642857,0.8714286,0.8571429,0.9642857,0.9642857,0.9642857,0.9642857,0.8714286,0.9642857,0.9642857,0.9678571,0.9678571,0.9678571,0.9642857,0.9642857,0.9642857,0.9642857,0.8714286,0.9678571,0.9642857,0.9642857,0.9642857,0.9678571,0.8714286,0.9642857,0.9678571,0.9678571,0.9678571,0.9642857,0.9642857,0.9678571,0.8714286,0.9678571,0.9642857,0.9642857,0.9678571,0.9678571,0.9642857,0.9642857,0.9678571,0.9642857,0.9642857,0.9642857,0.8714286,0.9642857,0.8714286,0.9642857,0.9678571,0.9678571,0.9678571,0.8714286,0.9642857,0.9678571)
IKFCM_carros   = c(0.9071429,0.9071429,0.9142857,0.9071429,0.9071429,0.9142857,0.9071429,0.9071429,0.9071429,0.9071429,0.9071429,0.9142857,0.9071429,0.9071429,0.9071429,0.9071429,0.9071429,0.9071429,0.9071429,0.9071429,0.9071429,0.9071429,0.9142857,0.9142857,0.9071429,0.9071429,0.9071429,0.9142857,0.9142857,0.9142857,0.9071429,0.9071429,0.9071429,0.9071429,0.9071429,0.9071429,0.9071429,0.9071429,0.9071429,0.9071429,0.9071429,0.9071429,0.9071429,0.9142857,0.9071429,0.9071429,0.9071429,0.9071429,0.9071429,0.9071429,0.9071429,0.9142857,0.9071429,0.9071429,0.9142857,0.9142857,0.9071429,0.9071429,0.9142857,0.9071429,0.9071429,0.9142857,0.9071429,0.9071429,0.9142857,0.9142857,0.9071429,0.9071429,0.9142857,0.9071429,0.9071429,0.9071429,0.9071429,0.9142857,0.9071429,0.9071429,0.9071429,0.9142857,0.9071429,0.9071429,0.9142857,0.9071429,0.9142857,0.9142857,0.9071429,0.9142857,0.9142857,0.9071429,0.9071429,0.9071429,0.9142857,0.9071429,0.9071429,0.9071429,0.9071429,0.9142857,0.9071429,0.9071429,0.9071429,0.9071429)
IKEM_carros    = c(0.95,0.95,0.6785714,0.85,0.5107143,0.95,0.5,0.85,0.9,0.7285714,0.85,0.95,0.6785714,0.9214286,0.8,0.6,0.85,0.6428571,0.6,0.9071429,0.55,0.5642857,0.85,0.5214286,0.95,0.6785714,0.5107143,0.6464286,0.8928571,0.8285714,0.95,0.85,0.8,0.85,0.5357143,0.5357143,0.8,0.5857143,0.8928571,0.8,0.95,0.6,0.5785714,0.5785714,0.9214286,0.85,0.8785714,0.5785714,0.8785714,0.65,0.5071429,0.8642857,0.85,0.85,0.75,0.5642857,0.6785714,0.5357143,0.8928571,0.6,0.7285714,0.8571429,0.85,0.5785714,0.5357143,0.5107143,0.5785714,0.5214286,0.8,0.8571429,0.5107143,0.85,0.9214286,0.6,0.85,0.75,0.8,0.75,0.8785714,0.8,0.6071429,0.8928571,0.5928571,0.9071429,0.5071429,0.95,0.5107143,0.5071429,0.5571429,0.8,0.6,0.8571429,0.5857143,0.5857143,0.8,0.5785714,0.85,0.85,0.5357143,0.8)
IKEM_IS_carros = c(0.9214286,0.9214286,0.7285714,0.6071429,0.9071429,0.6071429,0.9214286,0.9285714,0.9285714,0.9214286,0.9214286,0.9214286,0.9214286,0.9071429,0.9285714,0.9071429,0.6071429,0.6071429,0.9285714,0.9214286,0.9285714,0.9285714,0.7285714,0.9285714,0.9214286,0.9071429,0.7285714,0.9071429,0.6071429,0.9214286,0.9071429,0.9214286,0.9285714,0.9071429,0.9071429,0.9214286,0.9214286,0.6071429,0.9214286,0.6071429,0.6071429,0.9214286,0.9214286,0.9214286,0.9214286,0.9285714,0.9214286,0.9214286,0.6071429,0.9285714,0.9071429,0.9285714,0.9214286,0.6071429,0.7285714,0.9285714,0.9214286,0.9214286,0.9285714,0.9285714,0.9071429,0.9214286,0.9285714,0.9285714,0.7285714,0.9285714,0.9214286,0.6071429,0.9214286,0.9071429,0.9214286,0.9285714,0.9285714,0.9214286,0.9285714,0.6071429,0.6071429,0.9214286,0.9214286,0.9071429,0.9214286,0.9214286,0.6071429,0.6071429,0.9285714,0.9214286,0.9285714,0.9214286,0.9071429,0.9214286,0.9285714,0.7285714,0.6071429,0.6071429,0.7285714,0.9071429,0.9285714,0.9285714,0.9071429,0.6071429)
friedman.test(cbind( IEM_agaricus, IKFCM_agaricus, IKEM_agaricus, IKEM_IS_agaricus)) #
friedman.test(cbind( IEM_temperatura, IKFCM_temperatura, IKEM_temperatura, IKEM_IS_temperatura))
friedman.test(cbind( IEM_carros, IKFCM_carros, IKEM_carros, IKEM_IS_carros)) #
wilcox.test(IKEM_agaricus, IEM_agaricus, paired = TRUE, alternative = "greater") # 0.0008
wilcox.test(IKEM_agaricus, IKFCM_agaricus, paired = TRUE, alternative = "greater") # 6.697e-10
wilcox.test(IKEM_agaricus, IKEM_IS_agaricus, paired = TRUE, alternative = "greater") # 6.697e-10
wilcox.test(IKEM_temperatura, IEM_temperatura, paired = TRUE, alternative = "greater") # < 2.2e-16
wilcox.test(IKEM_temperatura, IKFCM_temperatura, paired = TRUE, alternative = "greater") # 2.353e-13
wilcox.test(IKEM_temperatura, IKEM_IS_temperatura, paired = TRUE, alternative = "greater") # 2.353e-13
wilcox.test(IKEM_carros, IEM_carros, paired = TRUE, alternative = "greater") # 0.00209
wilcox.test(IKEM_carros, IKFCM_carros, paired = TRUE, alternative = "greater") # 8.42e-08
wilcox.test(IKEM_carros, IKEM_IS_carros, paired = TRUE, alternative = "greater") # 8.42e-08
mean(IEM_carros)
mean(IKEM_carros)
mean(IKEM_IS_carros )
wilcox.test(IKEM_IS_carros, IEM_carros, paired = TRUE, alternative = "greater") # 1
wilcox.test(IKEM_IS_carros, IKFCM_carros, paired = TRUE, alternative = "greater") # 1
wilcox.test(IKEM_IS_carros, IKEM_carros, paired = TRUE, alternative = "greater") # 1
wilcox.test(IKEM_IS_temperatura, IEM_temperatura, paired = TRUE, alternative = "greater") # < 2.2e-16
wilcox.test(IKEM_IS_temperatura, IKFCM_temperatura, paired = TRUE, alternative = "greater") # 8.555e-14
wilcox.test(IKEM_IS_temperatura, IKEM_temperatura, paired = TRUE, alternative = "greater") # 4.775e-13
mean(IKEM_temperatura)
mean(IKEM_IS_temperatura)
wilcox.test(IKEM_IS_agaricus, IEM_agaricus, paired = TRUE, alternative = "greater") # 0.3546
wilcox.test(IKEM_IS_agaricus, IKFCM_agaricus, paired = TRUE, alternative = "greater") # 1.748e-08
wilcox.test(IKEM_IS_agaricus, IKEM_agaricus, paired = TRUE, alternative = "greater") # 3.85e-11
IEM_temperatura     = c
IKFCM_temperatura   = c
IKEM_temperatura    = c(0.59,0.6033333,0.6266667,0.5266667,0.5566667,0.5766667,0.6033333,0.6033333,0.5966667,0.52,0.6033333,0.7033333,0.7033333,0.7033333,0.7033333,0.5533333,0.5566667,0.6033333,0.6633333,0.59,0.58,0.6266667,0.6566667,0.5533333,0.5766667,0.63,0.6566667,0.6333333,0.6033333,0.6033333,0.6266667,0.58,0.62,0.59,0.6033333,0.7033333,0.6566667,0.58,0.59,0.6566667,0.5566667,0.6033333,0.5416667,0.6633333,0.62,0.6266667,0.5966667,0.57,0.5766667,0.5966667,0.5966667,0.5416667,0.5633333,0.55,0.6033333,0.64,0.6033333,0.58,0.7033333,0.55,0.7233333,0.6666667,0.6566667,0.62,0.5766667,0.5866667,0.5533333,0.59,0.58,0.5566667,0.6266667,0.6033333,0.64,0.7033333,0.5266667,0.6066667,0.5533333,0.5416667,0.6633333,0.58,0.5866667,0.58,0.5566667,0.53,0.5966667,0.6033333,0.6633333,0.6033333,0.58,0.6033333,0.58,0.62,0.6666667,0.7033333,0.6033333,0.51,0.5866667,0.51,0.59,0.5266667)
IKEM_IS_temperatura = c(0.55,0.525,0.54,0.52,0.525,0.525,0.525,0.55,0.525,0.5566667,0.525,0.525,0.5566667,0.525,0.55,0.525,0.525,0.55,0.525,0.6633333,0.525,0.525,0.525,0.525,0.55,0.5366667,0.55,0.525,0.55,0.52,0.52,0.525,0.525,0.525,0.525,0.52,0.525,0.5566667,0.525,0.55,0.525,0.6633333,0.525,0.525,0.55,0.525,0.5566667,0.525,0.525,0.5566667,0.5566667,0.54,0.525,0.525,0.6933333,0.525,0.54,0.68,0.5366667,0.525,0.525,0.525,0.55,0.55,0.5566667,0.55,0.55,0.525,0.55,0.55,0.525,0.68,0.52,0.525,0.52,0.525,0.525,0.525,0.525,0.525,0.525,0.55,0.52,0.525,0.525,0.525,0.55,0.68,0.525,0.6633333,0.5566667,0.525,0.525,0.52,0.525,0.52,0.525,0.525,0.525,0.52)
mean(IEM_temperatura) #
mean(IKFCM_temperatura) #
mean(IKEM_temperatura) #
mean(IKEM_IS_temperatura) #
dump
dump(IEM_temperatura)
qurt(IEM_temperatura)
quart(IEM_temperatura)
quantile(IEM_temperatura)
max(IEM_temperatura)
quantile(IKFCM_temperatura)
quantile(IEM_temperatura) #0.5167334
quantile(IKFCM_temperatura) #0.5579333
quantile(IKEM_temperatura) #0.6035167
quantile(IKEM_IS_temperatura) #0.54245
var(IEM_temperatura) #0.5167334
varimax(IKFCM_temperatura) #0.5579333
var(IKEM_temperatura) #0.6035167
var(IKEM_IS_temperatura) #0.54245
var(IEM_temperatura) #0.5167334
var(IKFCM_temperatura) #0.5579333
var(IKEM_temperatura) #0.6035167
var(IKEM_IS_temperatura) #0.54245
quantile(IEM_temperatura) #0.5167334
quantile(IKFCM_temperatura) #0.5579333
quantile(IKEM_temperatura) #0.6035167
quantile(IKEM_IS_temperatura) #0.54245
quantile(IEM_agaricus)
quantile(IKFCM_agaricus)
quantile(IKEM_agaricus)
quantile(IKEM_IS_agaricus)
quantile(IEM_carros)
quantile(IKFCM_carros)
quantile(IKEM_carros)
quantile(IKEM_IS_carros)
