if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
criterio = c(criterio, roc$AUC)
}
criterio = c()
for(i in 1:100){
retorno1 = IKEM(x, maxRep = 50, kernelType = 0, D = 10, plot = FALSE, numRep = 50)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
criterio = c(criterio, roc$AUC)
}
criterio
x
criterio = c()
for(i in 1:100){
retorno1 = IKEM(x, maxRep = 50, kernelType = 0, D = 6, plot = FALSE, numRep = 50)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
criterio = c(criterio, roc$AUC)
}
criterio = c()
for(i in 1:100){
retorno1 = IKEM(x, maxRep = 50, kernelType = 0, D = 6, plot = FALSE, numRep = 50)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
criterio = c(criterio, roc$AUC)
}
criterio = c()
for(i in 1:100){
retorno1 = IKEM(x, maxRep = 50, kernelType = 0, D = 6, plot = FALSE, numRep = 50)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
criterio = c(criterio, roc$AUC)
}	retorno1 = IKEM(x, maxRep = 50, kernelType = 0, D = 6, plot = FALSE, numRep = 50)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEM(x, maxRep = 50, kernelType = 0, D = 6, plot = FALSE, numRep = 50)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEM(x, maxRep = 50, kernelType = 0, D = 6, plot = FALSE, numRep = 50)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
criterio
retorno1
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEM(x, maxRep = 50, kernelType = 0, D = 6, plot = FALSE, numRep = 10)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEM(x, maxRep = 50, kernelType = 0, D = 6, plot = FALSE, numRep = 10)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEM(x, maxRep = 50, kernelType = 0, D = 6, plot = FALSE, numRep = 10)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEM(x, maxRep = 50, kernelType = 0, D = 6, plot = FALSE, numRep = 10)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEM(x, maxRep = 50, kernelType = 0, D = 6, plot = FALSE, numRep = 10)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEM(x, maxRep = 50, kernelType = 0, D = 6, plot = FALSE, numRep = 10)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEM(x, maxRep = 50, kernelType = 0, D = 6, plot = FALSE, numRep = 10)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEM(x, maxRep = 50, kernelType = 0, D = 6, plot = FALSE, numRep = 10)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEM(x, maxRep = 50, kernelType = 0, D = 6, plot = FALSE, numRep = 10)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEM(x, maxRep = 50, kernelType = 0, D = 6, plot = FALSE, numRep = 10)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEM(x, maxRep = 50, kernelType = 0, D = 6, plot = FALSE, numRep = 10)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEM(x, maxRep = 50, kernelType = 0, D = 6, plot = FALSE, numRep = 10)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
roc$AUC
retorno1 = IKEM(x, maxRep = 50, kernelType = 0, D = 6, plot = FALSE, numRep = 10)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEM(x, maxRep = 50, kernelType = 0, D = 6, plot = FALSE, numRep = 10)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEM(x, maxRep = 50, kernelType = 0, D = 6, plot = FALSE, numRep = 10)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEM(x, maxRep = 50, kernelType = 0, D = 6, plot = FALSE, numRep = 10)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEM(x, maxRep = 50, kernelType = 0, D = 6, plot = FALSE, numRep = 10)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEM(x, maxRep = 50, kernelType = 0, D = 6, plot = FALSE, numRep = 10)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
roc$AUC
retorno1 = IKEM(x, maxRep = 50, kernelType = 0, D = 6, plot = FALSE, numRep = 10)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEM(x, maxRep = 50, kernelType = 0, D = 6, plot = FALSE, numRep = 10)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEM(x, maxRep = 50, kernelType = 0, D = 6, plot = FALSE, numRep = 10)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEM(x, maxRep = 50, kernelType = 0, D = 6, plot = FALSE, numRep = 10)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEM(x, maxRep = 50, kernelType = 0, D = 6, plot = FALSE, numRep = 10)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEM(x, maxRep = 50, kernelType = 0, D = 6, plot = FALSE, numRep = 2)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEM(x, maxRep = 50, kernelType = 0, D = 6, plot = FALSE, numRep = 2)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEM(x, maxRep = 50, kernelType = 0, D = 6, plot = FALSE, numRep = 2)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
retorno1 = IKEM(x, maxRep = 50, kernelType = 0, D = 6, plot = FALSE, numRep = 2)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
criterio = c()
for(i in 1:100){
retorno1 = IKEM(x, maxRep = 50, kernelType = 0, D = 6, plot = FALSE, numRep = 10)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
criterio = c(criterio, roc$AUC)
}
source("Interval_Kernel_EM.r")
criterio = c()
for(i in 1:100){
retorno1 = IKEM(x, maxRep = 50, kernelType = 0, D = 6, plot = FALSE, numRep = 10)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
criterio = c(criterio, roc$AUC)
}
criterio = c()
for(i in 1:100){
retorno1 = IKEM(x, maxRep = 50, kernelType = 0, D = 6, plot = FALSE, numRep = 10)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
criterio = c(criterio, roc$AUC)
}
criterio = c()
for(i in 1:100){
retorno1 = IKEM(x, maxRep = 50, kernelType = 0, D = 6, plot = FALSE, numRep = 10)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
criterio = c(criterio, roc$AUC)
}
4i
4i < 3i
max(4i, 3i)
criterio = c()
for(i in 1:100){
retorno1 = IKEM(x, maxRep = 50, kernelType = 0, D = 6, plot = FALSE, numRep = 10)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
criterio = c(criterio, roc$AUC)
}
criterio = c()
for(i in 1:100){
retorno1 = IKEM(x, maxRep = 50, kernelType = 0, D = 6, plot = FALSE, numRep = 10)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
criterio = c(criterio, roc$AUC)
}
criterio
criterio = c()
for(i in 1:100){
retorno1 = IKEM(x, maxRep = 50, kernelType = 0, D = 6, plot = FALSE, numRep = 10)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
criterio = c(criterio, roc$AUC)
}
criterio
criterio = c()
for(i in 1:100){
retorno1 = IKEM(x, maxRep = 50, kernelType = 0, D = 6, plot = FALSE, numRep = 10)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
criterio = c(criterio, roc$AUC)
}
criterio = c()
for(i in 1:100){
retorno1 = IKEM(x, maxRep = 50, kernelType = 0, D = 6, plot = FALSE, numRep = 10)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
criterio = c(criterio, roc$AUC)
}
criterio = c()
for(i in 1:100){
retorno1 = IKEM(x, maxRep = 50, kernelType = 0, D = 6, plot = FALSE, numRep = 10)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
criterio = c(criterio, roc$AUC)
}
criterio
criterio = c()
for(i in 1:100){
tryCatch({
retorno1 = IKEM(x, maxRep = 50, kernelType = 0, D = 6, plot = FALSE, numRep = 10)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
criterio = c(criterio, roc$AUC)
}, error=function(e){})
}
criterio
criterio > 0.5
criterio = which(criterio > 0.5)
criterio
criterio = c()
for(i in 1:100){
tryCatch({
retorno1 = IKEM(x, maxRep = 50, kernelType = 0, D = 6, plot = FALSE, numRep = 10)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
criterio = c(criterio, roc$AUC)
}, error=function(e){})
}
criterio
criterio > 0.5
criterio[which(criterio > 0.5)]
criterio
IKEM_carros = c(0.9210521,0.9142857,0.9357143,0.9357143,0.9214286,0.9214286,0.9214286,0.9428571,0.9357143,0.9357143,0.9214286,0.9214286,0.9357143,0.9142857,0.9214286,0.9357143,0.9428571,0.9142857,0.9071429,0.9142857,0.9357143,0.9142857,0.9214286,0.9357143,0.8000000,0.9214286,0.9142857,0.9071429,0.9142857,0.9357143,0.9142857,0.9214286,0.9357143,0.8000000,0.9214286,0.9142857,0.9357143,0.9357143,0.8000000,0.9142857,0.9071429,0.9357143,0.9357143,0.9357143,0.9214286,0.9214286,0.9142857,0.9214286,0.9357143,0.9357143,0.9214286,0.9142857)
length(IKEM_carros)
var(IKEM_carros)
criterio = c()
for(i in 1:100){
tryCatch({
retorno1 = IKEM(x, maxRep = 50, kernelType = 0, D = 6, plot = FALSE, numRep = 10)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
criterio = c(criterio, roc$AUC)
}, error=function(e){})
}
criterio
criterio[which(criterio>0.5)]
length(criterio[which(criterio>0.5)])
criterio = c()
for(i in 1:100){
tryCatch({
retorno1 = IKEM(x, maxRep = 50, kernelType = 0, D = 6, plot = FALSE, numRep = 10)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
if(roc$AUC < 0.5){
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
}
criterio = c(criterio, roc$AUC)
}, error=function(e){})
}
criterio
length(criterio[which(criterio>0.5)])
criterio[which(criterio>0.5)]
IKEM_carros = c(0.9210521,0.9142857,0.9357143,0.9357143,0.9214286,0.9214286,0.9214286,0.9428571,0.9357143,0.9357143,0.9214286,0.9214286,0.9357143,0.9142857,0.9214286,0.9357143,0.9428571,0.9142857,0.9071429,0.9142857,0.9357143,0.9142857,0.9214286,0.9357143,0.8000000,0.9214286,0.9142857,0.9071429,0.9142857,0.9357143,0.9142857,0.9214286,0.9357143,0.8000000,0.9214286,0.9142857,0.9357143,0.9357143,0.8000000,0.9142857,0.9071429,0.9357143,0.9357143,0.9357143,0.9214286,0.9214286,0.9142857,0.9214286,0.9357143,0.9357143,0.9214286,0.9142857,0.8000000,0.9357143,0.9357143,0.9357143,0.9142857,0.9071429,0.9357143,0.8000000,0.8000000,0.9357143,0.9142857,0.9357143,0.9357143,0.9142857,0.9357143,0.9214286,0.9214286,0.9214286,0.9357143,0.9214286,0.9357143,0.8000000,0.9214286,0.9357143,0.9214286,0.9357143,0.9071429,0.9357143,0.9357143,0.9214286,0.8000000,0.9357143,0.8000000,0.9214286,0.9357143,0.9142857,0.9142857,0.9214286,0.9142857,0.9214286,0.9142857,0.9357143)
length(IKEM_carros)
IKEM_carros = c(0.9210521,0.9142857,0.9357143,0.9357143,0.9214286,0.9214286,0.9214286,0.9428571,0.9357143,0.9357143,0.9214286,0.9214286,0.9357143,0.9142857,0.9214286,0.9357143,0.9428571,0.9142857,0.9071429,0.9142857,0.9357143,0.9142857,0.9214286,0.9357143,0.8000000,0.9214286,0.9142857,0.9071429,0.9142857,0.9357143,0.9142857,0.9214286,0.9357143,0.8000000,0.9214286,0.9142857,0.9357143,0.9357143,0.8000000,0.9142857,0.9071429,0.9357143,0.9357143,0.9357143,0.9214286,0.9214286,0.9142857,0.9214286,0.9357143,0.9357143,0.9214286,0.9142857,0.8000000,0.9357143,0.9357143,0.9357143,0.9142857,0.9071429,0.9357143,0.8000000,0.8000000,0.9357143,0.9142857,0.9357143,0.9357143,0.9142857,0.9357143,0.9214286,0.9214286,0.9214286,0.9357143,0.9214286,0.9357143,0.8000000,0.9214286,0.9357143,0.9214286,0.9357143,0.9071429,0.9357143,0.9357143,0.9214286,0.8000000,0.9357143,0.8000000,0.9214286,0.9357143,0.9142857,0.9142857,0.9214286,0.9142857,0.9214286,0.9142857,0.9357143,0.9142857,0.9214286,0.9214286,0.9142857,0.9142857)
length(IKEM_carros)
IKEM_carros = c(0.9210521,0.9142857,0.9357143,0.9357143,0.9214286,0.9214286,0.9214286,0.9428571,0.9357143,0.9357143,0.9214286,0.9214286,0.9357143,0.9142857,0.9214286,0.9357143,0.9428571,0.9142857,0.9071429,0.9142857,0.9357143,0.9142857,0.9214286,0.9357143,0.8000000,0.9214286,0.9142857,0.9071429,0.9142857,0.9357143,0.9142857,0.9214286,0.9357143,0.8000000,0.9214286,0.9142857,0.9357143,0.9357143,0.8000000,0.9142857,0.9071429,0.9357143,0.9357143,0.9357143,0.9214286,0.9214286,0.9142857,0.9214286,0.9357143,0.9357143,0.9214286,0.9142857,0.8000000,0.9357143,0.9357143,0.9357143,0.9142857,0.9071429,0.9357143,0.8000000,0.8000000,0.9357143,0.9142857,0.9357143,0.9357143,0.9142857,0.9357143,0.9214286,0.9214286,0.9214286,0.9357143,0.9214286,0.9357143,0.8000000,0.9214286,0.9357143,0.9214286,0.9357143,0.9071429,0.9357143,0.9357143,0.9214286,0.8000000,0.9357143,0.8000000,0.9214286,0.9357143,0.9142857,0.9142857,0.9214286,0.9142857,0.9214286,0.9142857,0.9357143,0.9142857,0.9214286,0.9214286,0.9142857,0.9142857,0.9357143)
mean(IKEM_carros)
var(IKEM_carros)
IEM_carros = c(0.9642857,0.8714286,0.8714286,0.8714286,0.8714286,0.8714286,0.8714286,0.8714286,0.9678571,0.8714286,0.8714286,0.8714286,0.8714286,0.8714286,0.8714286,0.9678571,0.8714286,0.8714286,0.8714286,0.8714286,0.8714286,0.8714286,0.8714286,0.9678571,0.8714286,0.9678571,0.8714286,0.8714286,0.9678571,0.9642857,0.8714286,0.8714286,0.8714286,0.8714286,0.8714286,0.8714286,0.8714286,0.9678571,0.9678571,0.8714286,0.8714286,0.8714286,0.9642857,0.8714286,0.9678571,0.8714286,0.9678571,0.8714286,0.8714286,0.8714286,0.9642857,0.8714286,0.9642857,0.8714286,0.9678571,0.8714286,0.8714286,0.8714286,0.9678571,0.9678571,0.9678571,0.8714286,0.9642857,0.9678571,0.8714286,0.8714286,0.8714286,0.9678571,0.8714286,0.9642857,0.9678571,0.8714286,0.8714286,0.8714286,0.8714286,0.8714286,0.8714286,0.8714286,0.9642857,0.9642857,0.9642857,0.8714286,0.8714286,0.8714286,0.8714286,0.8714286,0.8714286,0.9642857,0.9678571,0.8714286,0.9642857,0.8714286,0.9642857,0.8714286,0.8714286,0.9678571,0.9642857,0.8714286,0.8714286,0.9678571)
IKFCM_carros = c(0.9071429,0.9071429,0.9142857,0.9071429,0.9071429,0.9071429,0.9071429,0.9142857,0.9071429,0.9071429,0.9071429,0.9142857,0.9071429,0.9071429,0.9071429,0.9071429,0.9071429,0.9071429,0.9142857,0.9071429,0.9071429,0.9071429,0.9142857,0.9071429,0.9142857,0.9071429,0.9071429,0.9142857,0.9071429,0.9071429,0.9071429,0.9071429,0.9142857,0.9071429,0.9142857,0.9071429,0.9071429,0.9071429,0.9142857,0.9142857,0.9071429,0.9071429,0.9071429,0.9071429,0.9071429,0.9071429,0.9142857,0.9142857,0.9071429,0.9071429,0.9071429,0.9142857,0.9071429,0.9071429,0.9071429,0.9142857,0.9142857,0.9142857,0.9142857,0.9071429,0.9142857,0.9071429,0.9071429,0.9071429,0.9071429,0.9071429,0.9071429,0.9071429,0.9071429,0.9071429,0.9142857,0.9071429,0.9071429,0.9071429,0.9071429,0.9071429,0.9142857,0.9071429,0.9142857,0.9071429,0.9071429,0.9071429,0.9071429,0.9142857,0.9071429,0.9071429,0.9071429,0.9071429,0.9071429,0.9071429,0.9071429,0.9142857,0.9071429,0.9071429,0.9071429,0.9071429,0.9071429,0.9142857,0.9071429,0.9071429)
IKEM_carros = c(0.9210521,0.9142857,0.9357143,0.9357143,0.9214286,0.9214286,0.9214286,0.9428571,0.9357143,0.9357143,0.9214286,0.9214286,0.9357143,0.9142857,0.9214286,0.9357143,0.9428571,0.9142857,0.9071429,0.9142857,0.9357143,0.9142857,0.9214286,0.9357143,0.8000000,0.9214286,0.9142857,0.9071429,0.9142857,0.9357143,0.9142857,0.9214286,0.9357143,0.8000000,0.9214286,0.9142857,0.9357143,0.9357143,0.8000000,0.9142857,0.9071429,0.9357143,0.9357143,0.9357143,0.9214286,0.9214286,0.9142857,0.9214286,0.9357143,0.9357143,0.9214286,0.9142857,0.8000000,0.9357143,0.9357143,0.9357143,0.9142857,0.9071429,0.9357143,0.8000000,0.8000000,0.9357143,0.9142857,0.9357143,0.9357143,0.9142857,0.9357143,0.9214286,0.9214286,0.9214286,0.9357143,0.9214286,0.9357143,0.8000000,0.9214286,0.9357143,0.9214286,0.9357143,0.9071429,0.9357143,0.9357143,0.9214286,0.8000000,0.9357143,0.8000000,0.9214286,0.9357143,0.9142857,0.9142857,0.9214286,0.9142857,0.9214286,0.9142857,0.9357143,0.9142857,0.9214286,0.9214286,0.9142857,0.9142857,0.9357143)
friedman.test(cbind( IEM_carros, IKFCM_carros, IKEM_carros))
wilcox.test(IKEM_carros, IEM_carros, paired = TRUE, alternative = "greater")
wilcox.test(IKEM_carros, IKFCM_carros, paired = TRUE, alternative = "greater")
mean(IKEM_carros)
mean(IEM_carros)
intervalGraph3D(x_interval, y_interval, z_interval, alvo = alvo)
x = as.matrix(read.table('carros.txt', head = TRUE))
x = normalizarDadosSimbolicos(x)
alvo = rep(1, dim(x)[1])
alvo[c(4,11,15,22,23)] = 2
x_interval = interval(x[,1],x[,2])
y_interval = interval(x[,3],x[,4])
z_interval = interval(x[,5],x[,6])
intervalGraph3D(x_interval, y_interval, z_interval, alvo = alvo)
IEM_carros = c
IKFCM_carros = c
IKEM_carros = c(0.9210521,0.9142857,0.9357143,0.9357143,0.9214286,0.9214286,0.9214286,0.9428571,0.9357143,0.9357143,0.9214286,0.9214286,0.9357143,0.9142857,0.9214286,0.9357143,0.9428571,0.9142857,0.9071429,0.9142857,0.9357143,0.9142857,0.9214286,0.9357143,0.8000000,0.9214286,0.9142857,0.9071429,0.9142857,0.9357143,0.9142857,0.9214286,0.9357143,0.8000000,0.9214286,0.9142857,0.9357143,0.9357143,0.8000000,0.9142857,0.9071429,0.9357143,0.9357143,0.9357143,0.9214286,0.9214286,0.9142857,0.9214286,0.9357143,0.9357143,0.9214286,0.9142857,0.8000000,0.9357143,0.9357143,0.9357143,0.9142857,0.9071429,0.9357143,0.8000000,0.8000000,0.9357143,0.9142857,0.9357143,0.9357143,0.9142857,0.9357143,0.9214286,0.9214286,0.9214286,0.9357143,0.9214286,0.9357143,0.8000000,0.9214286,0.9357143,0.9214286,0.9357143,0.9071429,0.9357143,0.9357143,0.9214286,0.8000000,0.9357143,0.8000000,0.9214286,0.9357143,0.9142857,0.9142857,0.9214286,0.9142857,0.9214286,0.9142857,0.9357143,0.9142857,0.9214286,0.9214286,0.9142857,0.9142857,0.9357143)
mean(IEM_carros)
var(IEM_carros)
mean(IKEM_carros)
var(IKEM_carros)
var(IKFCM_carros)
mean(IKFCM_carros)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo)
alvo
alvo[which(alvo ==2 )]
alvo[which(alvo ==2 )] = 0
alvo
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo)
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo)
retorno1$Posteriori
alvo
length(alvo)
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo)
x = as.matrix(read.table('carros.txt', head = TRUE))
x = normalizarDadosSimbolicos(x)
alvo = rep(1, dim(x)[1])
alvo[c(4,11,15,22,23)] = 2
x_interval = interval(x[,1],x[,2])
y_interval = interval(x[,3],x[,4])
z_interval = interval(x[,5],x[,6])
intervalGraph3D(x_interval, y_interval, z_interval, alvo = alvo)
alvo[c(4,11,15,22,23)] = 0
retorno1 = IEM(x, tipoMatriz = 3, numRep = 1, plot = FALSE)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
retorno1 = IKFCM(x, c = 2, m = 0.1, maxRep = 2, monteCarlo = 1)
roc = ROC(test = retorno1$U[,1], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
roc = ROC(test = retorno1$U[,2], stat = alvo, PV = FALSE, MX = FALSE, MI = FALSE, )
roc = ROC(test = retorno1$U[,2], stat = alvo)
retorno1 = IKFCM(x, c = 2, m = 0.1, maxRep = 2, monteCarlo = 1)
roc = ROC(test = retorno1$U[,2], stat = alvo)
roc = ROC(test = retorno1$U[,1], stat = alvo)
retorno1 = IKFCM(x, c = 2, m = 0.1, maxRep = 2, monteCarlo = 1)
roc = ROC(test = retorno1$U[,1], stat = alvo)
retorno1 = IKFCM(x, c = 2, m = 0.1, maxRep = 20, monteCarlo = 1)
roc = ROC(test = retorno1$U[,1], stat = alvo)
roc = ROC(test = retorno1$U[,2], stat = alvo)
retorno1 = IKEM(x, maxRep = 3, kernelType = 0, D = 6, plot = FALSE, numRep = 1)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo, PV = FALSE, MX = FALSE, MI
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo,)
retorno1 = IKEM(x, maxRep = 3, kernelType = 0, D = 6, plot = FALSE, numRep = 1)
retorno1 = IKEM(x, maxRep = 3, kernelType = 0, D = 6, plot = FALSE, numRep = 1)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo,)
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo,)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo,)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo,)
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo,)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo,)
retorno1 = IKEM(x, maxRep = 3, kernelType = 0, D = 6, plot = FALSE, numRep = 1)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo,)
retorno1 = IKEM(x, maxRep = 3, kernelType = 0, D = 6, plot = FALSE, numRep = 1)
roc = ROC(test = retorno1$Posteriori[,1], stat = alvo,)
roc = ROC(test = retorno1$Posteriori[,2], stat = alvo,)
?ROC
omspec = 0.4
sens = 0.6
plot(omspec, sens, type="b", xlim=c(0,1), ylim=c(0,1), lwd=2,
xlab="1 − specificity", ylab="Sensitivity")
grid()
abline(0,1,col="red",lty=2)
unname
?unname
norm     = rep(1:5, times=c(33,6,6,11,2))
abnorm   = rep(1:5, times=c(3,2,2,11,33))
testres  = c(abnorm,norm)
truestat = c(rep(1,length(abnorm)), rep(0,length(norm)))
# Summary table (Table I in the paper)
( tab=as.matrix(table(truestat, testres)) )
( tot=colSums(tab) )                            # Number of patients w/ each test result
( truepos=unname(rev(cumsum(rev(tab[2,])))) )   # Number of true positives
( falsepos=unname(rev(cumsum(rev(tab[1,])))) )  # Number of false positives
( totpos=sum(tab[2,]) )                         # The total number of positives (one number)
( totneg=sum(tab[1,]) )                         # The total number of negatives (one number)
(sens=truepos/totpos)                           # Sensitivity (fraction true positives)
(omspec=falsepos/totneg)                        # 1 − specificity (false positives)
sens=c(sens,0); omspec=c(omspec,0)              # Numbers when we classify all as normal
tot
plot(omspec, sens, type="b", xlim=c(0,1), ylim=c(0,1), lwd=2,
xlab="1 − specificity", ylab="Sensitivity")
grid()
data1 = getData(1, 1)
getData = function(base, scenario){
return(
switch(base,
switch(scenario,
base1(n1=100, n2=100, var1=3, var2=3, range1=2, range2=2, offset2=c(10,5)),
base1(100, 100, 3, 1, 2, 2, c(10,5)),
base1(100, 100, 3, 3, 5, 1, c(0, 0))
),
switch(scenario,
base2(n1=300, n2=80, var2=0.1, range1=0.5, range2=0.5, offset2=c(-1.5, 1.5)),
base2(n1=300, n2=80, var2=0.1, range1=0.5, range2=0.5, offset2=c(-2, 2)),
base2(n1=300, n2=80, var2=0.1, range1=0.2, range2=0.5, offset2=c(-2, 2))
),
switch(scenario,
base3(n1 = 100, n2=80, range1=1, range2=1, var1=0.3),
base3(n1 = 100, n2=80, range1=1, range2=0.5, var1=0.4),
base3(n1 = 100, n2=80, range1=1, range2=0.5, var1=0.8)
),
))
}
data1 = getData(1, 1)
grid()
x = as.matrix(read.table('temperatura.txt'))
x = x[-c(19,37),]
x = normalizarDadosSimbolicos(x)
alvo = rep(2, dim(x)[1])
alvo[c(1,2,8,10,11,14,15,17,20,21,24,25,26,27,28,30,32,33,34,35)] = 1
x_interval = interval(x[,1],x[,2])
y_interval = interval(x[,3],x[,4])
z_interval = interval(x[,5],x[,6])
intervalGraph3D(x_interval, y_interval, z_interval, alvo = alvo)
grid()
grid(false)
removeGrid()
tot
truepos
